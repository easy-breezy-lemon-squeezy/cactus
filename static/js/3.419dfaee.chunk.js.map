{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/common/buttons/Like/Like.module.css","components/Profile/MyPosts/NewPost/NewPost.module.css","header-photo.jpg","assets/images/user.jpg","components/Profile/ProfileInfo/ProfileStatusWithHooks.js","components/Profile/ProfileInfo/ProfileInfoDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","new.jpg","components/common/buttons/Like/Like.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/NewPost/NewPost.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","Field","placeholder","name","component","Input","type","Textarea","Object","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","onClick","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","photoLarge","photos","large","userPhoto","profileInfo","page_info","photo","src","alt","target","files","length","info","ProfileInfoDataForm","initialValues","formData","then","Like","like","icon","faHeart","count","Post","post","wrap","author","avatar_photo","content","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","newPost","textarea","validate","required","ButtonWrap","buttonText","NewPost","values","onAddPost","newPostText","MyPosts","postsComponents","posts","p","id","addPost","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","page","ProfileContainer","userId","this","match","params","iserId","authorizedUserId","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.419dfaee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__1ovs_\",\"header\":\"ProfileInfo_header__2jr-s\",\"photo\":\"ProfileInfo_photo__1jeyv\",\"page_info\":\"ProfileInfo_page_info__26PKe\",\"row_info\":\"ProfileInfo_row_info__1pQ9t\",\"info\":\"ProfileInfo_info__34LPy\",\"contact\":\"ProfileInfo_contact__263HQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Profile_page__3G1zr\",\"header\":\"Profile_header__15Tlp\",\"photo\":\"Profile_photo__vsghj\",\"page_info\":\"Profile_page_info__2ENJS\",\"row_info\":\"Profile_row_info__dyNej\",\"info\":\"Profile_info__3PhXB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__imbdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"Post_photo__3fQAs\",\"author\":\"Post_author__355K9\",\"content\":\"Post_content__34sUe\",\"wrap\":\"Post_wrap__2yBf0\",\"like\":\"Post_like__3Yu-F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"like\":\"Like_like__1mJCS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"NewPost_post__y4sSa\",\"textarea\":\"NewPost_textarea__1c2M0\"};","export default __webpack_public_path__ + \"static/media/header-photo.1847d349.jpg\";","export default __webpack_public_path__ + \"static/media/user.ccb66e80.jpg\";","import React, {useState, useEffect} from 'react';\r\n\r\nconst  ProfileStatusWithHooks = (props) => {\r\n        let [editMode, setEditMode] = useState(false);\r\n        let [status, setStatus] = useState(props.status);\r\n        useEffect( () => {\r\n                setStatus(props.status);\r\n            }, [props.status]\r\n\r\n        )\r\n\r\n        const activateEditMode = () => {\r\n                setEditMode(true);\r\n        }\r\n        const deactivateEditMode = () => {\r\n                setEditMode(false);\r\n                props.updateStatus(status);\r\n        }\r\n        const onStatusChange = (e) => {\r\n                setStatus(e.currentTarget.value);\r\n        }\r\n        return <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Статус:  </b><span onDoubleClick={activateEditMode}>{status || '-------' }</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Полное имя</b>: <Field placeholder={\"Full name\"} name={\"fullName\"} component={Input}/>\r\n        </div>\r\n        <div>\r\n            <b>В поиске работы</b>:  <Field name={\"lookingForAJob\"} component={Input} type={\"checkbox\"}/>\r\n        </div>\r\n\r\n        <div>\r\n            <b>Профессиональные навыки</b>: <Field placeholder={\"My professional skills\"} name={\"lookingForAJobDescription\"}\r\n                                                  component={Textarea} />\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>Обо мне</b>: <Field placeholder={\"About me\"} name={\"aboutMe\"} component={Textarea} />\r\n        </div>\r\n        <div>\r\n            <b>Контакты</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: <Field placeholder={key} name={\"contacts.\" + key} component={Input} /></b>\r\n            </div>\r\n        })}\r\n        </div>\r\n        <div><button>Сохранить</button></div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import header_photo from \"../../../header-photo.jpg\";\r\nimport avatar_photo from \"../../../avatar.jpg\";\r\nimport profileInfo from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/user.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport ProfileInfoDataForm from \"./ProfileInfoDataForm\";\r\nimport {useState} from \"react\";\r\n\r\nfunction ProfileInfo({profile, status, updateStatus, isOwner, savePhoto, saveProfile }) {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile){\r\n        return <Preloader/>\r\n    }\r\n    let photoLarge = profile.photos.large;\r\n    if(!photoLarge){\r\n        photoLarge = userPhoto;\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={profileInfo.profileInfo}>\r\n            {/*<div className={profileInfo.header}> <img src={header_photo} alt=\"photo\" /></div>*/}\r\n            <div className={profileInfo.page_info}>\r\n                <div>\r\n                    <div className={profileInfo.photo}><img src={photoLarge} alt=\"photo\" /></div>\r\n                    {isOwner && <input placeholder={\"Редактировать фото\"} type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n\r\n                <div className={profileInfo.info}>\r\n                    <h3>{profile.fullName}</h3>\r\n                    <div><ProfileStatusWithHooks status={status} updateStatus={updateStatus}/></div>\r\n                    {editMode\r\n                        ? <ProfileInfoDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner}/>}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        <div>\r\n            <b>Полное имя</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>В поиске работы</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>Профессиональные навыки</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n\r\n        <div>\r\n            <b>Обо мне</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Контакты</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n        {isOwner && <div><button onClick={goToEditMode}>Редактировать</button></div>}\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","export default __webpack_public_path__ + \"static/media/new.48aecd3d.jpg\";","import like from \"./Like.module.css\";\r\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nfunction Like(props) {\r\n    return (\r\n        <div className={like.like}>\r\n            <div className={like.icon}> <FontAwesomeIcon icon={faHeart} /></div>\r\n            <span>{props.count}</span>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Like;","import new_post from \"../../../../new.jpg\";\r\nimport post from \"./Post.module.css\";\r\nimport avatar_photo from \"../../../../avatar.jpg\";\r\nimport Like from \"../../../common/buttons/Like/Like\";\r\n\r\nfunction Post(props) {\r\n    return (\r\n\r\n            <div className={post.post}>\r\n                <div className={post.wrap}>\r\n                    <div className={post.author}><img src={avatar_photo} alt=\"photo\" /></div>\r\n                    <div className={post.content}>\r\n                        <p>{props.message}</p>\r\n                        {/*<img className={post.photo} src={new_post} alt=\"logo\" />*/}\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={post.like} >\r\n                    <Like count={props.likesCount}/>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","import newPost from \"./NewPost.module.css\";\r\nimport ButtonWrap from \"../../../common/buttons/ButtonWrap/ButtonWrap\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nfunction NewPost(props) {\r\n    let addPost = (values) => {\r\n        props.onAddPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={newPost.post}>\r\n            <AddNewPostFormRedux onSubmit={addPost}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name={\"newPostText\"} className={newPost.textarea} placeholder=\"Что у вас нового?\" component={Textarea}\r\n                   validate={[required, maxLength10]}\r\n            />\r\n            <ButtonWrap buttonText={'Опубликовать'}/>\r\n        </form>\r\n    )\r\n}\r\nconst AddNewPostFormRedux = reduxForm({form: \"profileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default NewPost;","import post from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport NewPost from \"./NewPost/NewPost\";\r\n\r\nfunction MyPosts(props) {\r\n    let postsComponents = props.posts.map( p => <Post key={p.id} likesCount={p.likesCount}  message={p.message} key={p.id}/>);\r\n\r\n    return (\r\n        <div className={post.posts}>\r\n            <h3>Мои посты</h3>\r\n            <NewPost onAddPost={props.addPost}/>\r\n            {postsComponents}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import profile from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nfunction Profile(props) {\r\n    return (\r\n        <div className={profile.page}>\r\n           <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}\r\n                        savePhoto={props.savePhoto} isOwner={props.isOwner} saveProfile={props.saveProfile}/>\r\n           <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserProfile, getProfile, getStatus, updateStatus, savePhoto, saveProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.iserId;\r\n\r\n        if(!userId){\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus} savePhoto={this.props.savePhoto}\r\n                     isOwner={!this.props.match.params.userId}/>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps  = (state) =>({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserProfile, getProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}