{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/hoc/withAuthRedirect.js"],"names":["module","exports","Dialog","props","className","dialog","active","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","dialogs","textarea","component","Textarea","placeholder","validate","required","ButtonWrap","button","buttonText","Dialogs","dialogsComponents","messagesPage","map","d","messagesComponents","messages","m","page","values","addMessage","newMessageBody","compose","connect","state","dispatch","sendMessageCreator","Component","RedirectComponent","this","isAuth","React","auth"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,QAAU,yBAAyB,SAAW,0BAA0B,SAAW,0BAA0B,OAAS,0B,oBCArKD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,oBCA7FD,EAAOC,QAAU,CAAC,QAAU,2B,iICYbC,MAVf,SAAgBC,GAEZ,OACI,qBAAKC,UAAWC,IAAOA,OAAS,IAAMA,IAAOC,OAA7C,SACI,cAAC,IAAD,CAASC,GAAI,aAAeJ,EAAMK,GAAlC,SAAuCL,EAAMM,U,kBCI1CC,MATf,SAAiBP,GACb,OACI,qBAAKC,UAAWO,IAAQA,QAAxB,SACKR,EAAMQ,W,kCCIbC,EAAcC,YAAiB,IAuBrC,IAUMC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAVL,SAACZ,GACpB,OACI,uBAAMc,SAAUd,EAAMe,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOf,UAAWgB,IAAQC,SAAUC,UAAWC,IAAUd,KAAM,iBAAkBe,YAAa,oGAC9FC,SAAU,CAACC,IAAUd,KACrB,cAACe,EAAA,EAAD,CAAYvB,UAAWgB,IAAQQ,OAAQC,WAAY,iEAOhDC,EAlCf,SAAiB3B,GAEb,IAAI4B,EAAoB5B,EAAM6B,aAAaZ,QAAQa,KAAK,SAAAC,GAAC,OAAG,cAAC,EAAD,CAAQzB,KAAMyB,EAAEzB,KAAMD,GAAI0B,EAAE1B,IAAS0B,EAAE1B,OAC/F2B,EAAqBhC,EAAM6B,aAAaI,SAASH,KAAK,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS1B,QAAS0B,EAAE1B,SAAc0B,EAAE7B,OAKnG,OAEI,sBAAKJ,UAAWgB,IAAQkB,KAAxB,UACI,qBAAKlC,UAAWgB,IAAQA,QAAxB,SACKW,IAEL,sBAAK3B,UAAWgB,IAAQgB,SAAxB,UACKD,EACD,cAACrB,EAAD,CAAqBG,SAXb,SAACsB,GACjBpC,EAAMqC,WAAWD,EAAOE,0B,+DCIjBC,4BACXC,aAdkB,SAACC,GACnB,MAAO,CACHZ,aAAcY,EAAMZ,iBAGH,SAACa,GACtB,MAAO,CACHL,WAAY,SAACC,GACTI,EAASC,YAAmBL,UCXR,SAACM,GAAc,IACrCC,EADoC,4JAEtC,WACI,OAAIC,KAAK9C,MAAM+C,OACR,cAACH,EAAD,eAAeE,KAAK9C,QADG,cAAC,IAAD,CAAUI,GAAI,eAHV,GACV4C,IAAMJ,WAUtC,OADqCJ,aAHH,SAACC,GAAD,MAAW,CACzCM,OAAQN,EAAMQ,KAAKF,UAEcP,CAAoCK,KDM9DN,CAGbZ","file":"static/js/4.4925efda.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"Dialogs_page__3gXvp\",\"dialogs\":\"Dialogs_dialogs__3xzQl\",\"messages\":\"Dialogs_messages__3bMig\",\"textarea\":\"Dialogs_textarea__21NiF\",\"button\":\"Dialogs_button__2Rh9a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__WvGYe\",\"dialogs\":\"Dialog_dialogs__2cYBD\",\"active\":\"Dialog_active__eoHEA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__9Ijsf\"};","import dialog from \"./Dialog.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Dialog(props) {\r\n\r\n    return (\r\n        <div className={dialog.dialog + ' ' + dialog.active}>\r\n            <NavLink to={\"/dialogs/1\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Dialog;","import message from \"./Message.module.css\";\r\n\r\nfunction Message(props) {\r\n    return (\r\n        <div className={message.message}>\r\n            {props.message}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Message;","import dialogs from \"./Dialogs.module.css\";\r\nimport ButtonWrap from \"../common/buttons/ButtonWrap/ButtonWrap.jsx\";\r\nimport React from \"react\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nfunction Dialogs(props) {\r\n\r\n    let dialogsComponents = props.messagesPage.dialogs.map( d=> <Dialog name={d.name} id={d.id} key={d.id}/>);\r\n    let messagesComponents = props.messagesPage.messages.map( m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageBody);\r\n    }\r\n    return (\r\n\r\n        <div className={dialogs.page}>\r\n            <div className={dialogs.dialogs}>\r\n                {dialogsComponents}\r\n            </div>\r\n            <div className={dialogs.messages}>\r\n                {messagesComponents}\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessageForm = (props) =>{\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className={dialogs.textarea} component={Textarea} name={\"newMessageBody\"} placeholder={\"Введите сообщение\"}\r\n            validate={[required, maxLength50]}/>\r\n            <ButtonWrap className={dialogs.button} buttonText={'Отправить'}/>\r\n        </form>\r\n)\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let mapStateToPropsForRedirect  = (state) =>({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n"],"sourceRoot":""}